Binary heaps are very similar to binary search tree,but with some different rules!
,In a MaxBinaryHeap, parent nodes are always larger than the child nodes. 
,In a MinBinaryHeap,parent nodes are always smaller than the child nodes.

use cases:
1.Binary heaps are used to implement priority queues, Which are very 
    commonly used data structures
2.They are also used quite a bit,with graph traversal algorithms

What is Sink down?
The procedure of deleting the root from the heap(effectively extracting the maximum element
in a max-heap or the minimum element in a min-heap) and restoring the properties is called 
down-heap(also known as bubble-down,percolate-down,sift-down,trickle-down,heapify-down,cascade-down
and extract-min/max)

Max Binary heaps
1.Each parent has atmost two child nodes
2.the value of each parent node is always greater than its child nodes
3.In a max binary heap the parent is greater than the children,but 
    there are no guarantees between sibling nodes
4.A binary heap is as compact as possible,all the children of each node are 
    as full as they can be and left children are filled out first
5.Logic to find any child node based on the parent node: 
     for any index of an array n...,
     the left child is stored at 2n+1,the right child is at 2n+2 
6.Logic to find any parent node based on the child node:
    for any child node at index n...
    its parent is at index (n-1)/2 and floor it

/*
Insert Strategy of Max Binary Heaps
1.Push the value into the values property on the heap
2.Bubble the value up to its correct spot:
    1.create a value called index which is the length
     of the values property-1
    2.create a variable called parent index which is 
      the floor of (index-1)/2
    3.Keep looping as long as the values element at the
      parent index is less than the values element at
      the child index
        1.Swap the value of the values element at the 
          parent index with the value of the element property
          at the child index
        2.Set the index to be the parent index,and start over
*/

/*
Remove Strategy of Max Binary Heaps(also called extract max)
1.Swap the first value in the values property with the last one
2.Pop from the values property,so you can return the value at the end.
3.Have the new root "sink down" to the correct spot...
  1.your parent index start at 0(the root)
  2.find the index of left child:2*index+1(make sure its not out of bounds)
  3.find the index of the right child:2*index+2(make sure its not out of bounds)
  4.if the left or right child is greater than the element...swap.
    if both left and right children are larger,swap with the largest child.
  5.the child index you swapped to now becomes the new parent index.
  6.keep looping and swapping until neither child is larger than the element
  7.return the old root
*/

What is a priority queue?
A data structure where each element has a priority.
element with higher priorities are served before elements with lower priorities
/*
1.write a min binary heap-lower number means higher priority.
2.Each node has a value and a priority.Use the priority to build the heap.
3.Enqueue method accepts a value and priority,makes a new node,and puts it in the 
  right spot based off of its priority
4.Dequeue method removes root element,returns it,and rearranges heap using priority.
[note: we are using a MinBinaryHeap to build the PriorityQueue]
*/

Big O
Insertion -O(log N)
Removal -O(log N)
Search -O(N)